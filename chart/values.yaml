# Values for orbis2-frontend

replicaCount: 1

deployment:
  restartPolicy: Always
  rollingUpdate:
    maxSurge: 2
    maxUnavailable: 1

gitlab:
  env: default-environment
  app: default-app

image:
  repository: davos.fhgr.ch/nlp/orbis2/orbis2-frontend
  tag: 1.0.0
  pullPolicy: Always

imagePullSecrets: [name: regcred]
nameOverride: ""
fullnameOverride: ""

service:
  main:
    type: ClusterIP
    ports:
      http:
        enabled: true
        port: 63013
        protocol: HTTP
        targetPort: 63013


ingress:
  main:
    enabled: true
    annotations: {
      cert-manager.io/cluster-issuer: "letsencrypt-issuer",
      kubernetes.io/ingress.class: nginx,
      nginx.ingress.kubernetes.io/use-regex: "true" ,
      nginx.ingress.kubernetes.io/auth-type: basic,
      nginx.ingress.kubernetes.io/auth-secret: orbis2ng-httpbasicauth,
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: orbis2-ng.prod.semanticlab.net
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - orbis2-ng.prod.semanticlab.net
        secretName: orbis2-ng.prod-secret

env:
  # port under which the application is started
  PORT: 63013
  NUXT_PUBLIC_ORBIS_API_BASE: orbis2-backend.orbis2:63012/

